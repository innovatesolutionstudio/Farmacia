<!DOCTYPE html>
<html lang="en">

    <head>
        <link rel="shortcut icon" href="#" />
        <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
        <meta name="viewport"
            content="width=device-width,initial-scale=1,user-scalable=no" />
        <title>DataTables estilo Bootstrap 5 - NodeJS y Express</title>
        <link rel="stylesheet" href="resources/css/RegistroTablas.css" />
        <link rel="icon" href="resources/images/fevicon.png" type="image/png" />
        <link rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </head>

    <body>

        <!-- Encabezado -->
        <div class="header-container">
            <div class="breadcrumb">
             
                <a href="/empleados" class="reporte-link ">
                    <h1
                        style="color: #858B92; font-weight: bold; margin-right: 5px;">Gestion Empleados</h1>
                </a>
                <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
                <h1 style="font-weight: bold;">Departamentos</h1>
            </div>
            <div class="button-container">

                <!-- Select con opciones -->
                <select id="opciones" class="form-select">
                    <option value style="color: #ffffff;" disabled
                        selected>Exportar
                        documento</option>
                    <option value="pdf">Imprimir PDF</option>
                    <option value="excel">Exportar CSV</option>
                    <option value="Papeleria">Papeleria</option>
                </select>

                <!-- Botón Añadir Nuevo con SweetAlert2 -->
                <a type="submit" href="#" class="btn btnCrear btn-danger"
                    style="font-size: 20px;">Añadir Nuevo</a>
            </div>

        </div>

        <div class="card3">
            <div class="header-card1">
                <span>Registro de departamentos</span>
            </div>

            <div class="content-card-registro">
                <table id="tablaDepartamentos" class="table-registro">

                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Nombre</th>
                            <th>ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% results.forEach(function(departamento) { %>
                        <tr>

                            <td>
                                <%= departamento.ID_Departamento %>
                            </td>
                            <td>
                                <%= departamento.Nombre %>
                            </td>
                            <td style="width: 200px;">
                                <select
                                    class="form-select-action acciones-select"
                                    aria-label="Acciones">
                                    <option selected disabled>Selecciona una
                                        acción</option>
                                    <option value="editar">Editar</option>
                                    <option value="eliminar">Eliminar</option>
                                    <option value="copiar">Copiar</option>
                                </select>

                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script type="text/javascript" language="javascript"
      src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript" language="javascript"
      src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>

    <script>
    $(document).ready(function () {
        let url = "/departamentos/"; // Define la variable url aquí
        let opcion = null;
        let ID_Departamento, Nombre;

        let tablaDepartamentos = $("#tablaDepartamentos").DataTable({
            json: {
                url: url,
                dataSrc: "",
            },
            columns: [
                { data: "ID_Departamento" },
                { data: "Nombre" },
                {
                    defaultContent: `
                          <td style="width: 200px;">
                              <select class="form-select acciones-select">
                                  <option selected disabled>Selecciona una acción</option>
                                  <option value="editar">Editar</option>
                                  <option value="eliminar">Eliminar</option>
                                  <option value="copiar">Copiar</option>
                              </select>
                          </td>`
                },
            ],
            language: {
                    url: "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json",
                },
        });

        // Manejar el evento del select para Imprimir PDF o Exportar CSV
        $("#opciones").change(function () {
              let selectedOption = $(this).val();

              if (selectedOption === "pdf") {
                  // Abrir en una nueva ventana/pestaña
                  window.open("/impre_departamentos", '_blank');
              } else if (selectedOption === "excel") {
                  // Llamar la función para exportar a CSV
                  exportToExcel();
              } else if(selectedOption ==="Papeleria"){
                window.location.href = "/Papeleria_departamentos";
               
              }
          });
           // Función para exportar los datos a Excel
           function exportToExcel() {
                // Crear un nuevo libro de Excel
                var wb = XLSX.utils.book_new();

                // Obtener los datos de la tabla incluyendo la columna de IDs y excluyendo la columna de acciones
                var wsData = [];
                $("#tablaDepartamentos tbody tr").each(function () {
                    var rowData = [];
                    $(this).find("td").each(function () {
                        rowData.push($(this).text().trim());
                    });
                    wsData.push(rowData);
                });

                // Crear una hoja de trabajo con los datos obtenidos
                var ws = XLSX.utils.aoa_to_sheet([["ID_Departamento", "nombre"]].concat(wsData));

                // Agregar la hoja de trabajo al libro
                XLSX.utils.book_append_sheet(wb, ws, "Departamentos");

                // Guardar el libro como un archivo Excel
                XLSX.writeFile(wb, "Departamentos.xlsx");
          }

        // Manejar las acciones del select
        $('#tablaDepartamentos tbody').on('change', '.acciones-select', function () {
              var data = tablaDepartamentos.row($(this).parents('tr')).data(); // Obtener datos de la fila actual
              var accion = $(this).val(); // Obtener la acción seleccionada
  
              if (accion === 'editar') {
                  // Acción para editar
                  Swal.fire({
                      title: 'Editar Departamento',
                      html: `
                          <input type="text" id="ID_Departamento" hidden value="${data.ID_Departamento}" />
                          <label for="Nombre" class="col-form-label">Nombre</label>
                          <input type="text" id="Nombre" class="swal2-input" value="${data.Nombre}">
                      `,
                      showCancelButton: true,
                      confirmButtonText: 'Guardar',
                      cancelButtonText: 'Cancelar',
                      preConfirm: () => {
                          const nombre = Swal.getPopup().querySelector('#Nombre').value;
                          if (!nombre) {
                              Swal.showValidationMessage('Por favor, ingrese el nombre');
                          }
                          return { Nombre: nombre };
                      }
                  }).then((result) => {
                      if (result.isConfirmed) {
                          const formData = { ID_Departamento: data.ID_Departamento, Nombre: result.value.Nombre, opcion: 'editar' };
                          $.ajax({
                              type: 'POST',
                              url: url + data.ID_Departamento,
                              data: formData,
                              success: function () {
                                  Swal.fire('¡Guardado!', 'Ciudad editada con éxito', 'success').then(() => {
                                      window.location.reload();
                                  });
                              }
                          });
                      }
                  });
              } else if (accion === 'eliminar') {
                  // Acción para eliminar
                  Swal.fire({
                      title: '¿Estás seguro?',
                      text: "¡No podrás revertir esto!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonText: 'Sí, eliminarlo',
                      cancelButtonText: 'Cancelar',
                  }).then((result) => {
                      if (result.isConfirmed) {
                          $.ajax({
                              type: 'POST',
                              url: url + data.ID_Departamento,
                              data: { opcion: 'eliminar' },
                              success: function () {
                                  Swal.fire('¡Eliminado!', 'La ciudad ha sido eliminada.', 'success').then(() => {
                                      window.location.reload();
                                  });
                              }
                          });
                      }
                  });
              } else if (accion === 'copiar') {
                  // Acción para copiar
                  var datosFila = [data.ID_Ciudad, data.Nombre].join("\t");
                  navigator.clipboard.writeText(datosFila).then(function () {
                      alert("¡Datos copiados al portapapeles!");
                  }).catch(function (error) {
                      alert("Error al copiar datos al portapapeles");
                  });
              }
  
              // Reiniciar el select después de la acción
              $(this).val('Selecciona una acción');
          });
  
            // Función para crear ciudad
            $(".btnCrear").click(function () {
              Swal.fire({
                  title: 'Crear Departamento',
                  html: `
                      <input type="text" id="ID_Departamento" hidden />
                      <label for="Nombre" class="col-form-label">Nombre</label>
                      <input type="text" id="Nombre" class="swal2-input" placeholder="Ingrese el nombre del departamento">
                  `,
                  showCancelButton: true,
                  confirmButtonText: 'Guardar',
                  cancelButtonText: 'Cancelar',
                  preConfirm: () => {
                      const nombre = Swal.getPopup().querySelector('#Nombre').value;
                      if (!nombre) {
                          Swal.showValidationMessage('Por favor, ingrese el nombre');
                      }
                      return { Nombre: nombre };
                  }
              }).then((result) => {
                  if (result.isConfirmed) {
                      const formData = { Nombre: result.value.Nombre, opcion: 'crear' };
                      $.ajax({
                          type: 'POST',
                          url: url,
                          data: formData,
                          success: function () {
                              Swal.fire('¡Guardado!', 'Departamento creada con éxito', 'success').then(() => {
                                  window.location.reload();
                              });
                          }
                      });
                  }
              });
          });
        // Botón copiar (opcional)
        $("#tablaDepartamentos").on("click", ".btnCopiar", function () {
              var fila = $(this).closest("tr");
              var datosFila = fila.find("td").map(function () {
                  return $(this).text();
              }).get();
              var datosCopiar = datosFila.join("\t");
  
              navigator.clipboard.writeText(datosCopiar).then(function () {
                  alert("¡Datos copiados al portapapeles!");
              }).catch(function (error) {
                  alert("Error al copiar datos al portapapeles");
              });
          });
        });
</script>
