<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="shortcut icon" href="#" />
  <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no" />
  <title>DataTables estilo Bootstrap 5 - NodeJS y Express</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/css/bootstrap.min.css"
    integrity="sha384-DhY6onE6f3zzKbjUPRc2hOzGAdEf4/Dz+WJwBvEYL/lkkIsI3ihufq9hk9K4lVoK" crossorigin="anonymous" />
  <link rel="icon" href="resources/images/fevicon.png" type="image/png" />
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/dataTables.bootstrap5.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.min.css" />
  <style>
    table.dataTable thead {
      background-color: #ffffff;
    color: rgb(0, 0, 0);
    }
 

    .ftable{
      background-color: rgba(248, 248, 248, 0.829);
      color: rgb(0, 0, 0);
    }
    .btn-group img {
    max-width: 24px; /* Define el ancho máximo del icono */
    max-height: 24px; /* Define el alto máximo del icono */
    }
    body{
      background-color: #00000000;
    }
    
  </style>
</head>

<body>
  <div class="container-fluid">
    <div style="display: flex; align-items: center; flex-wrap: wrap;">
        <a href="/empleados" class="reporte-link">
            <h1 style="color: #858B92; font-weight: bold; margin-right: 5px;">Recursos Humanos</h1>
        </a>
        <a href="/empleados" class="reporte-link">
            <h1 style="color: #858B92; font-weight: bold; margin-right: 5px;"> >Gestión de Empleados</h1>
        </a>
        <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
        <h1 style="font-weight: bold; margin: 0 10px;">Departamentos</h1>
        
        <a id="btnCrear" class="btn btn-group btn-light mt-2" style="font-size: 20px; margin-right: 10px; background-color: red; color: white; align-items: center; margin-left: auto;">
             &nbsp; + Añadir Nuevo
        </a>
    </div>
    <!-- <a id="btnActualizar" class="btn btn-group btn-light mt-2" style="font-size: 20px;">
        <img src="resources/images/iconos/refresh.svg" alt="Crear"> &nbsp;Actualizar
    </a>

    <a id="btnExportar" class="btn btn-group btn-light mt-2" style="font-size: 20px;">
        <img src="resources/images/iconos/export.svg" alt="Crear"> &nbsp;Exportar CSV
    </a>

    <a href="/impre_departamentos" class="btn btn-group btn-light mt-2" style="font-size: 20px;" target="_blank">
        <img src="resources/images/iconos/print.svg" alt="Crear"> &nbsp;Imprimir
    </a> -->

    <div class="row shadow-lg p-3 mb-5 ftable" id="departamentosContainer" style="margin-top: 100px;">

        <div class="col">

            <table id="tablaDepartamentos" class="table table-striped table-bordered" style="width: 100%">

                <thead>
                    <tr>
                        <th class="text-center">ID</th>
                        <th class="text-center">Nombre</th>
                        <th class="text-center" style="width: 150px;">ACCIONES</th>
                    </tr>
                </thead>
                <tbody>
                    <% results.forEach(function(departamento) { %>
                    <tr>

                        <td class="text-center">
                            <%= departamento.ID_Departamento %>
                        </td>
                        <td class="text-center">
                            <%= departamento.Nombre %>
                        </td>
                        <td>
                            <div class="text-center">
                                <div class="btn-group">
                                    <a href="#" class="btn btn-sm btnEditar"><img src="resources/images/iconos/edit.svg" alt="Editar"></a>
                                    <a href="#" class="btn btn-sm btnBorrar"><img src="resources/images/iconos/delete.svg" alt="Eliminar"></a>
                                    
                                </div>

                            </div>

                        </td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!--Modal para CRUD-->
<div id="modalCRUD" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="max-width: 900px; margin: auto;"> 
        <div class="modal-content" style="background-color: #f8eeee; border-radius: 25px; height: 400px;"> <!-- Esquinas más redondeadas y mayor altura -->
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel" style="font-size: 28px; font-weight: bold;">Agregar Departamento</h5> <!-- Texto más grande y en negritas -->
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border: none; background: transparent; font-size: 24px;">
                    &times; <!-- Esto crea la "X" para cerrar -->
                </button>
            </div>
            <form id="formDepartamentos">
                <div class="modal-body">
                    <input id="ID_Departamento" hidden />
                    
                    <p style="font-size: 20px;">Todos los campos son obligatorios, excepto los mencionados como (opcional), para crear un nuevo departamento</p> <!-- Texto más grande -->
                    <label for="" class="col-form-label" style="font-size: 20px;">Departamento</label> <!-- Etiqueta más grande -->
                    <input type="text" class="form-control" id="Nombre" />
                </div>
                <div class="modal-footer" style="justify-content: center; margin-top: 20px;">
                    <button type="submit" id="btnGuardar" class="btn btn-danger" style="margin-left: 25px; font-size: 20px; padding: 12px 25px;"> <!-- Color rojo fuerte -->
                        <strong>Guardar</strong>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript" language="javascript" src="https://code.jquery.com/jquery-3.5.1.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/js/bootstrap.min.js" integrity="sha384-5h4UG+6GOuV9qXh6HqOLwZMY4mnLPraeTrjT5v07o347pj6IkfuoASuGBhfDsp3d" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.0.2/dist/sweetalert2.all.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>

<script>
    $(document).ready(function () {
        let url = "/departamentos/"; // Define la variable url aquí
        let opcion = null;
        let ID_Departamento, Nombre;

        let tablaDepartamentos = $("#tablaDepartamentos").DataTable({
            json: {
                url: url,
                dataSrc: "",
            },
            columns: [
                { data: "ID_Departamento" },
                { data: "Nombre" },
                {
                    defaultContent:
                        "<div class='text-center'><div class='btn-group'><button class='btn btn-info btn-sm btnEditar'>Editar</button><button class='btn btn-danger btn-sm btnBorrar'>Borrar</button></div></div>",
                },
            ],
            language: {
                    url: "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json",
                },
        });

        $("#tablaDepartamentos").on("click", ".btnBorrar", function () {
            var data = tablaDepartamentos.row($(this).parents("tr")).data(); // Obtener datos de la fila
            var id = data.ID_Departamento;
            opcion = "eliminar"; // Establecer la opción como eliminar
            Swal.fire({
                title: "¿Estás seguro?",
                text: "¡No podrás revertir esto!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Sí, eliminarlo!",
            }).then((result) => {
                if (result.isConfirmed) {
                    // Hacer la petición para eliminar
                    $.ajax({
                        type: "POST",
                        url: url + id,
                        data: { opcion: opcion },
                        success: function (data) {
                            Swal.fire(
                                "¡Eliminado!",
                                "El registro ha sido eliminado.",
                                "success"
                            ).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.reload(); // Recarga la página si se confirma la acción
                                }
                            });
                        },
                    });
                }
            });
        });

        $("#tablaDepartamentos").on("click", ".btnEditar", function () {
            var data = tablaDepartamentos.row($(this).parents("tr")).data(); // Obtener datos de la fila
            $("#exampleModalLabel").text("Editar Departamento"); // Cambiar el título del modal
            $("#ID_Departamento").val(data.ID_Departamento); // Llenar el campo ID_Departamento
            $("#Nombre").val(data.Nombre); // Llenar el campo Nombre
            $("#modalCRUD").modal("show"); // Mostrar el modal
            opcion = "editar"; // Establecer la opción como editar
        });

        $("#formDepartamentos").submit(function (e) {
            e.preventDefault(); // Evitar el envío del formulario por defecto

            // Obtener los datos del formulario
            var formData = {
                ID_Departamento: $("#ID_Departamento").val(),
                Nombre: $("#Nombre").val(),
                opcion: opcion,
            };

            // Enviar la solicitud al servidor
            $.ajax({
                type: "POST",
                url: url + formData.ID_Departamento, // Utilizamos el ID para identificar el departamento a editar
                data: formData,
                success: function (data) {
                    $("#modalCRUD").modal("hide"); // Ocultar el modal después de editar
                    window.location.reload();
                },
                error: function (err) {
                    console.error("Error al editar departamento:", err);
                },
            });
        });

        $(document).ready(function () {
            // Evento click para el botón de crear
            $("#btnCrear").click(function () {
                // Limpiar los campos del formulario de departamentos
                $("#ID_Departamento").val("");
                $("#Nombre").val("");
                $("#exampleModalLabel").text("Crear Departamento"); // Cambiar el título del modal
                $("#modalCRUD").modal("show"); // Mostrar el modal
                opcion = "crear"; // Establecer la opción como crear
            });
        });

       
    });
    $("#btnActualizar").click(function () {
            // Recarga la página actual
            location.reload();
        });

        $(document).ready(function () {
            // Evento clic para el botón de exportar
            $("#btnExportar").click(function () {
                // Crear un nuevo libro de Excel
                var wb = XLSX.utils.book_new();

                // Obtener los datos de la tabla incluyendo la columna de IDs y excluyendo la columna de acciones
                var wsData = [];
                $("#tablaDepartamentos tbody tr").each(function () {
                    var rowData = [];
                    $(this)
                        .find("td")
                        .each(function () {
                            // Modificado para incluir todas las columnas
                            rowData.push($(this).text().trim());
                        });
                    wsData.push(rowData);
                });

                // Crear una hoja de trabajo con los datos obtenidos
                var ws = XLSX.utils.aoa_to_sheet([
                    ["ID_Departamento", "Nombre"],
                ].concat(wsData));

                // Agregar la hoja de trabajo al libro
                XLSX.utils.book_append_sheet(wb, ws, "Departamentos");

                // Guardar el libro como un archivo Excel
                XLSX.writeFile(wb, "departamentos.xlsx");
            });
        });

        $("#tablaDepartamentos").on("click", ".btnCopiar", function () {
            // Obtener la fila correspondiente al botón de copiar
            var fila = $(this).closest("tr");

            // Obtener los datos de la fila
            var datosFila = fila
                .find("td")
                .map(function () {
                    return $(this).text();
                })
                .get();

            // Convertir los datos en una cadena separada por tabulaciones
            var datosCopiar = datosFila.join("\t");

            // Copiar los datos al portapapeles
            navigator.clipboard.writeText(datosCopiar).then(function () {
                console.log("Datos copiados al portapapeles:", datosCopiar);
                // Mostrar un mensaje de éxito
                alert("¡Datos copiados al portapapeles!");
            }).catch(function (error) {
                console.error("Error al copiar datos al portapapeles:", error);
                // Mostrar un mensaje de error si es necesario
                alert("Error al copiar datos al portapapeles");
            });
        });
</script>
