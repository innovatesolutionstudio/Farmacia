<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" crossorigin="anonymous" />
    <link rel="stylesheet" href="resources/css/cajas.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Cargamos Chart.js para poder crear gráficos -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <title>Ventas - Finanzas</title>
</head>
<body>

<!-- Encabezado -->
<div class="header-container">
  <div class="breadcrumb">
    <a href="/vista_Finanzas" class="reporte-link">
        <h1 style="color: #858B92; font-weight: bold; margin-right: 5px;">Finanzas</h1>
    </a>
    <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
    <h1 style="font-weight: bold;">Ganancias</h1>
  </div>
</div>

<div class="container2">
    <!-- Card 1: Información del Empleado -->
    <div class="card1">
        <div class="header-card1">
            <span>Grafico de Futuras Gananacias</span>
            <a href="#" onclick="verGrafico()">Ver más &raquo;</a>
        </div>
        <div class="content-card1">
            <div>
                <h2 id="">Cargando...</h2>
                <p>Sucursal</p>
            </div> 
            <div>
                <h2 id="prodconmayorganancias">Cargando..</h2>
                <p>Producto con mayor ganancias</p>
            </div>
        </div>
    </div>

    <!-- Card 2: Estado Actual de la Caja -->
    <div class="card1">
        <div class="header-card1">
            <span>Ganancias</span>
        </div>
        <div class="content-card1">
            <div>
                <h2 id="gananciaAnual">Cargando...</h2>
                <p>Gananacia Anual</p>
            </div>
            <div>
                <h2 id="gananciaMensual">Cargando...</h2>
                <p>Ganancias Mensual</p>
            </div>
        </div>
    </div>
</div>

<br>

<!-- Tabla de ventas y clientes facturados -->
<div class="card3">
    <div class="header-card1">
        <span>Historia de Clientes Facturados</span>
    </div>
    <div class="content-card-clientes">
        <table class="table-clientes">
            <thead>
                <tr>
                    <th>Año</th>
                    <th>Ganancia</th>
                </tr>
            </thead>
            <% results.forEach(function(ganancia) { %>
              <tr>
                
                <td class="text-center"><%= ganancia.Ano %></td>
                <td class="text-center"><%= ganancia.Ganancia_Total_Anual %></td>
          
              </tr>
              <% }); %>
        </table>
    </div>
</div>
<script>
  // Definimos las variables globalmente para la regresión
  let m, b;
  
  // Función para abrir el gráfico en una ventana emergente de SweetAlert2
  function verGrafico() {
      // Datos que vienen desde el servidor (incrustados en la plantilla EJS)
      const resultados = <%- JSON.stringify(results) %>;
  
      // Extraemos los años y las ganancias de los resultados para trabajar con ellos
      const anos = resultados.map(item => item.Ano);
      const ganancias = resultados.map(item => item.Ganancia_Total_Anual);
  
      // Calculamos la regresión lineal y almacenamos m y b globalmente
      const regresion = calcularRegresionLineal(anos, ganancias);
      m = regresion.m;
      b = regresion.b;
  
      // Configuración de los datos para el gráfico
      var datiedu3 = {
          labels: anos, // Etiquetas de los años para el eje X
          datasets: [
              {
                  label: 'Ganancia Total Anual',
                  data: anos.map((ano, index) => ({ x: ano, y: ganancias[index] })),
                  backgroundColor: 'rgb(255, 99, 132)', // Color de los puntos de ganancia
                  borderWidth: 1,
                  showLine: false // No conectar los puntos, es un gráfico de dispersión
              },
              {
                  label: 'Línea de Regresión',
                  data: anos.map(x => ({ x: x, y: m * x + b })), // Puntos de la línea de regresión
                  borderColor: 'rgb(54, 162, 235)', // Color de la línea de regresión
                  fill: false,
                  type: 'line', // Tipo de gráfico: línea
                  pointRadius: 0 // No mostrar puntos en la línea de regresión
              }
          ]
      };
  
      // Opciones de configuración del gráfico, incluyendo etiquetas para los ejes
      var opzioni = {
          scales: {
              x: {
                  title: {
                      display: true,
                      text: 'Año' // Etiqueta del eje X
                  }
              },
              y: {
                  title: {
                      display: true,
                      text: 'Ganancia Total Anual' // Etiqueta del eje Y
                  }
              }
          }
      };
  
      // Mostrar el gráfico dentro de una ventana emergente de SweetAlert2
      Swal.fire({
          title: 'Gráfico de Regresión Lineal',
          html: `
           <canvas id="Chartline" width="400" height="200"></canvas>
            <br>
            <!-- Select con las opciones de año -->
            <select id="yearSelect">
                <option value="${new Date().getFullYear() - 1}">${new Date().getFullYear() - 1}</option> <!-- Año pasado -->
                <option value="${new Date().getFullYear()}" selected>${new Date().getFullYear()}</option> <!-- Año actual, seleccionado por defecto -->
                <option value="${new Date().getFullYear() + 1}">${new Date().getFullYear() + 1}</option> <!-- Siguiente año -->
            </select>
            <button onclick="predecirGanancia()">Predecir Ganancia</button>
            <p id="resultadoPrediccion">Cargando.../ selecciona el Año</p>

          

          `,
          showCloseButton: true,
          width: '60%',
     
          showConfirmButton: false,
          didOpen: () => {
              // Renderizar el gráfico después de que se abre la ventana
              const ctx = document.getElementById('Chartline').getContext('2d');
              grafo2(datiedu3, opzioni, ctx);
          }
      });
  }
  
  // Función para crear el gráfico usando Chart.js
  function grafo2(dati, opzioni, ctx) {
      new Chart(ctx, {
          type: 'scatter',
          data: dati,
          options: opzioni || {} // Opciones adicionales, si hay
      });
  }
  
  // Función para calcular la regresión lineal (pendiente 'm' e intercepto 'b')
  function calcularRegresionLineal(x, y) {
      const n = x.length;
      const sumX = x.reduce((acc, val) => acc + val, 0);
      const sumY = y.reduce((acc, val) => acc + val, 0);
      const sumXY = x.reduce((acc, val, i) => acc + val * y[i], 0);
      const sumX2 = x.reduce((acc, val) => acc + val * val, 0);
  
      const m = (n * sumXY - sumX * sumY) / (n * sumX2 - sumX * sumX);
      const b = (sumY - m * sumX) / n;
  
      return { m, b };
  }
  
  function predecirGanancia() {
      // Tomamos el año ingresado por el usuario
      const yearInput = document.getElementById('yearInput').value;
      const year = parseInt(yearInput);
  
      // Validamos que el valor ingresado sea un número
      if (isNaN(year)) {
          document.getElementById('resultadoPrediccion').textContent = 'Por favor, ingresa un año válido.';
          return;
      }
  
      // Calculamos la ganancia estimada usando la ecuación de la recta: y = m * x + b
      const gananciaEstimada = m * year + b;
  
      // Mostramos el resultado de la predicción en el párrafo
      document.getElementById('resultadoPrediccion').textContent = 
          `La ganancia estimada para el año ${year} es de ${gananciaEstimada.toFixed(2)} unidades monetarias.`;
  }
  </script>
  <script>
    // Función para predecir la ganancia basada en el año seleccionado
    function predecirGanancia() {
        // Tomamos el año seleccionado por el usuario
        const yearSelect = document.getElementById('yearSelect').value;
        const year = parseInt(yearSelect);
    
        // Calculamos la ganancia estimada usando la ecuación de la recta: y = m * x + b
        const gananciaEstimada = m * year + b;
    
        // Mostramos el resultado de la predicción en el párrafo
        document.getElementById('resultadoPrediccion').textContent = 
            `La ganancia estimada para el año ${year} es de ${gananciaEstimada.toFixed(2)} unidades monetarias.`;
    }
    </script>

</body>
</html>
