<!DOCTYPE html>
<html lang="es">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://kit.fontawesome.com/a076d05399.js"
      crossorigin="anonymous"></script>
    <link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      crossorigin="anonymous" />
    <link rel="stylesheet" href="resources/css/reportes_espe.css" />
    <link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <title>Pedidos - Reporte Anual</title>
  </head>

  <body>
    <!-- Encabezado -->
    <div class="header-container">
      <div class="breadcrumb">
        <a href="/vista_Finanzas" class="reporte-link">
          <h1
            style="color: #858B92; font-weight: bold; margin-right: 5px;">Finanzas</h1>
        </a>
        <h2 style="color: #858B92; font-weight: bold; margin-right: 5px;">›</h2>
        <a href="/vista_reportes" class="reporte-link">
          <h1
            style="color: #858B92; font-weight: bold; margin-right: 5px;">Reportes</h1>
        </a>
        <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
        <h1 style="font-weight: bold;">Pedidos</h1>
      </div>
    </div>

    <!-- Filtros -->
    <div class="filters-container">
      <div class="filter">
        <label for="fecha">Rango de reporte</label>
        <input type="text" id="fecha" value="Seleccione un año" readonly>
        <i class="fa fa-calendar"></i>
      </div>

      <div class="filter">
        <label for="anio">Año</label>
        <select id="anio1" name="anio" class="form-select">
          <script>
          const anioActual1 = new Date().getFullYear();
          for (let i = 2015; i <= anioActual1; i++) {
            document.write(`<option value="${i}">${i}</option>`);
          }
        </script>
        </select>
      </div>

      <!-- Botón de imprimir -->
      <div class="filter">
        <label for="lote">Imprimir en PDF</label>
        <a class="print-btn" id="saveChartBtn1">
          <i class="fa fa-print"></i> Imprimir
        </a>
      </div>
    </div>

    <!-- Contenido -->
    <div class="container2">
      <!-- Reporte Gráfico -->
      <div class="card1">
        <div class="header-card1">
          <div id="chartTitle">Reporte de Pedidos por Años</div>
        </div>
        <div>
          <canvas id="pedidosChart" width="300" height="200"></canvas>
        </div>
      </div>

      <!-- Tabla de Reportes -->
      <div class="card-container">
        <div class="card2">
          <div class="header-card1">
            <span>Tabla de pedidos por años</span>
          </div>
          <div class="table-container">
            <table id="productosTable">
              <thead>
                <tr>
                  <th>Mes</th>
                  <th>Total de Pedidos</th>
                </tr>
              </thead>
              <tbody>
                <!-- Los datos serán agregados aquí dinámicamente -->
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>

    <!-- Scripts -->
    <script
      src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
   document.addEventListener('DOMContentLoaded', function () {
  const anioSelect1 = document.getElementById('anio1');
  const productosTableBody = document.querySelector('#productosTable tbody');
  const chartTitle1 = "Reporte de Pedidos por Año";
  

  const nombresMeses = [
    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
  ];

  async function fetchAndRenderChart1(year) {
    try {
      const response = await fetch(`/pedidos_g/${year}`);
      if (!response.ok) {
        throw new Error('Error al obtener los datos');
      }

      const data = await response.json();
      if (!data.length) {
        Swal.fire('Sin datos', 'No hay datos disponibles para el año seleccionado.', 'info');
        productosTableBody.innerHTML = '';
        if (window.myChart1) window.myChart1.destroy();
        return;
      }

      // Crear el gráfico
      const labels = data.map(item => nombresMeses[item.Mes - 1]);
      const totals = data.map(item => item.TotalPedidos);
      const ctx = document.getElementById('pedidosChart').getContext('2d');

      if (window.myChart1) {
        window.myChart1.destroy();
      }

      window.myChart1 = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: labels,
          datasets: [{
            label: 'Pedidos por Mes',
            data: totals,
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });

      // Actualizar la tabla
      productosTableBody.innerHTML = '';
      data.forEach(item => {
        const row = `
          <tr>
            <td>${nombresMeses[item.Mes - 1]}</td>
            <td>${item.TotalPedidos}</td>
          </tr>
        `;
        productosTableBody.insertAdjacentHTML('beforeend', row);
      });
    } catch (error) {
      console.error('Error fetching data:', error);
      Swal.fire('Error', 'No se pudieron cargar los datos para el año seleccionado.', 'error');
    }
  }



  // Render inicial
  fetchAndRenderChart1(anioSelect1.value);

  // Manejar cambios en el año seleccionado
  anioSelect1.addEventListener('change', function () {
    fetchAndRenderChart1(this.value);
  });

  // Manejar guardar gráfico como PDF
  saveChartBtn1.addEventListener('click', function () {
    const year = anioSelect1.value;
    const image = document.getElementById('pedidosChart').toDataURL('image/png');

    fetch('/save_chart_image', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ image, year, title: chartTitle1 })
    })
      .then(response => response.json())
      .then(data => {
        if (data.pdfUrl) {
          window.open(data.pdfUrl, '_blank');
        } else {
          Swal.fire('Error', 'No se pudo generar el PDF.', 'error');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire('Error', 'No se pudo guardar el gráfico.', 'error');
      });
  });
  
});

  </script>
  <script>
     const anioSelect = document.getElementById('anio1');
  const fechaInput = document.getElementById('fecha');



  // Función para actualizar el campo de rango de reporte
  function actualizarRangoReporte() {
    const anioSeleccionado = anioSelect.value;
    if (anioSeleccionado ) {
      
      fechaInput.value = `Reporte de la gestión ${anioSeleccionado}`;
    } else if (anioSeleccionado) {
      fechaInput.value = `Reporte de la gestión ${anioSeleccionado}`;
    } else {
      fechaInput.value = 'Seleccione la gestion para el reporte ';
    }
  }

  // Escuchar cambios en los select de año y mes
  anioSelect.addEventListener('change', actualizarRangoReporte);
  </script>
  </body>

</html>
