<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    crossorigin="anonymous" />
  <link rel="stylesheet" href="resources/css/reportes_espe.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <title>Ventas - Finanzas</title>
</head>

<body>

  <!-- Encabezado -->
  <div class="header-container">
    <div class="breadcrumb">
      <a href="/vista_Finanzas" class="reporte-link ">
        <h1 style="color: #858B92; font-weight: bold; margin-right: 5px;">Finanzas</h1>
      </a>
      <h2 style="color: #858B92; font-weight: bold; margin-right: 5px;">›</h2>
      <a href="/vista_reportes" class="reporte-link">
        <h1 style="color: #858B92; font-weight: bold; margin-right: 5px;">Reportes</h1>
      </a>
      <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
      <h1 style="font-weight: bold;">Proveedores</h1>
    </div>
  </div>

<!-- Filtro de fecha y selección de opciones -->
<div class="filters-container">
  <div class="filter">
    <label for="fecha">Rango de reporte</label>
    <input type="text" id="fecha" value="Seleccione un año" readonly>
    <i class="fa fa-calendar"></i>
  </div>

  <div class="filter">
    <label for="medicamento">Año</label>
    <select id="anio" name="anio" class="form-select">
      <script>
        const anioActual = new Date().getFullYear();
        for (let i = 2012; i <= anioActual; i++) {
          document.write(`<option value="${i}">${i}</option>`);
        }
      </script>
    </select>
  </div>

  <div class="filter">
    <label for="lote">Mes</label>
    <select id="mes" name="mes" class="form-select">
      <option value="1">Enero</option>
      <option value="2">Febrero</option>
      <option value="3">Marzo</option>
      <option value="4">Abril</option>
      <option value="5">Mayo</option>
      <option value="6">Junio</option>
      <option value="7">Julio</option>
      <option value="8">Agosto</option>
      <option value="9">Septiembre</option>
      <option value="10">Octubre</option>
      <option value="11">Noviembre</option>
      <option value="12">Diciembre</option>
    </select>
  </div>

  <!-- Botón de imprimir -->
  <div class="filter">
    <label for="lote">Imprimir en PDF</label>
    <a class="print-btn" id="saveChartBtn">
      <i class="fa fa-print"></i> Imprimir
    </a>
  </div>
</div>

<!-- Contenido de las tarjetas -->
<div class="container2">
  <!-- Card 1: Reportes -->
  <div class="card1">
    <div class="header-card1">
      <div id="chartTitle">Reporte de ventas de productos por proveedores</div>
    </div>
    <div style="max-width: 100%; overflow-x: auto;">
      <canvas id="ventasChart" style="height: 300px;"></canvas>
    </div>
  </div>
  <!-- Tabla de Reportes -->
  <div class="card-container">
    <div class="card2">
      <div class="header-card1">
        <span>Tabla de ventas por gestiones</span>
      </div>
      <div class="table-container">
        <table id="productosTable">
          <thead>
            <tr>
              <th>Proveedor</th>
              <th>Total Vendido</th>
            </tr>
          </thead>
          <tbody>
            <!-- Los datos serán agregados aquí dinámicamente -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>


  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const anioSelect = document.getElementById('anio');
      const mesSelect = document.getElementById('mes');
      const saveChartBtn = document.getElementById('saveChartBtn');
      const productosTableBody = document.querySelector('#productosTable tbody');
      const chartTitle = document.getElementById('chartTitle').innerText;
  
      function fetchAndRenderChart(year, month) {
        fetch(`/ventas/ventas_p/${year}/${month}`)
          .then(response => response.json())
          .then(data => {
            const labels = data.map(item => item.Proveedor);
            const totals = data.map(item => item.Cantidad_Total);
            const ctx = document.getElementById('ventasChart').getContext('2d');
  
            // Destruir el gráfico anterior si existe
            if (window.myChart) {
              window.myChart.destroy();
            }
  
            // Crear el nuevo gráfico
            window.myChart = new Chart(ctx, {
              type: 'pie',
              data: {
                labels: labels,
                datasets: [{
                  label: 'Ventas por Proveedor',
                  data: totals,
                  backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                  ],
                  borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                  ],
                  borderWidth: 1
                }]
              }
            });
  
            // Actualizar la tabla de productos más vendidos
            productosTableBody.innerHTML = ''; // Limpiar la tabla antes de añadir nuevos datos
            data.forEach(item => {
              const row = `
                <tr>
                  <td>${item.Proveedor}</td>
                  <td>${item.Cantidad_Total}</td>
                </tr>
              `;
              productosTableBody.insertAdjacentHTML('beforeend', row);
            });
          })
          .catch(error => console.error('Error fetching data:', error));
      }
  
      // Renderizar gráfico y tabla al inicio
      fetchAndRenderChart(anioSelect.value, mesSelect.value);
  
      // Actualizar el gráfico y la tabla cuando se cambie el año o mes
      anioSelect.addEventListener('change', function () {
        fetchAndRenderChart(this.value, mesSelect.value);
      });
  
      mesSelect.addEventListener('change', function () {
        fetchAndRenderChart(anioSelect.value, this.value);
      });
  
      // Funcionalidad del botón para guardar como PDF
      saveChartBtn.addEventListener('click', function () {
        const year = anioSelect.value;
        const month = mesSelect.value;
        const image = document.getElementById('ventasChart').toDataURL('image/png');
  
        fetch('/save_chart_image', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ image, year, month, title: chartTitle })
        })
          .then(response => response.json())
          .then(data => {
            if (data.pdfUrl) {
              window.open(data.pdfUrl, '_blank');
            } else {
              alert('Error al generar el PDF.');
            }
          })
          .catch(error => console.error('Error:', error));
      });
    });
  </script>
  
  


  <script>
    const anioSelect = document.getElementById('anio1');
    const fechaInput = document.getElementById('fecha');



    // Función para actualizar el campo de rango de reporte
    function actualizarRangoReporte() {
      const anioSeleccionado = anioSelect.value;
      if (anioSeleccionado) {

        fechaInput.value = `Reporte de la gestión ${anioSeleccionado}`;
      } else if (anioSeleccionado) {
        fechaInput.value = `Reporte de la gestión ${anioSeleccionado}`;
      } else {
        fechaInput.value = 'Seleccione la gestion para el reporte ';
      }
    }

    // Escuchar cambios en los select de año y mes
    anioSelect.addEventListener('change', actualizarRangoReporte);
  </script>


</html>