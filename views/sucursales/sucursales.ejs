<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="shortcut icon" href="#" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport"
      content="width=device-width,initial-scale=1,user-scalable=no" />
    <title>DataTables estilo Bootstrap 5 - NodeJS y Express</title>
    <link rel="stylesheet" href="resources/css/RegistroTablas.css" />
    <link rel="icon" href="resources/images/fevicon.png" type="image/png" />
    <link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>
  <body>

    <!-- Encabezado -->
    <div class="header-container">
      <div class="breadcrumb">
        <a href="/vista_finanzas" class="reporte-link ">
          <h1
            style="color: #858B92; font-weight: bold; margin-right: 5px;">Finanzas</h1>
        </a>
        <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
        <a href="/cajas" class="reporte-link ">
          <h1
            style="color: #858B92; font-weight: bold; margin-right: 5px;">Cajas</h1>
        </a>
        <h2 style="font-size: 40px; margin: 0 10px;">›</h2>
        <h1 style="font-weight: bold;">Sucursales</h1>
      </div>

      <div class="button-container">
        <select id="opciones" class="form-select">
          <option value style="color: #ffffff;" disabled selected>Exportar
            documento</option>
          <option value="excel">Exportar CSV</option>
          <option value="papeleria">Papelería</option>
        </select>
        <a type="submit" href="#" class="btn btnCrear btn-danger"
          style="font-size: 20px;">Añadir Nuevo</a>
      </div>
    </div>

    <div class="card3">
      <div class="header-card1">
        <span>Registro de Sucursales</span>
      </div>

      <div class="content-card-registro">
        <table id="tablaSucursales" class="table-registro">
          <thead>
            <tr>
              <th>ID</th>
              <th>Nombre</th>
              <th>Dirección</th>
              <th>Teléfono</th>
              <th>Encargado</th>
              <th>Ciudad</th>
              <th>Departamento</th>
              <th>País</th>
              <th>ACCIONES</th>
            </tr>
          </thead>
          <tbody>
            <!-- Generación dinámica de filas con datos de sucursales -->
            <% results.forEach(function(sucursal) { %>
            <tr>
              <td><%= sucursal.ID_Sucursal %></td>
              <td><%= sucursal.Nombre %></td>
              <td><%= sucursal.Direccion %></td>
              <td><%= sucursal.Telefono %></td>
              <td><%= sucursal.Encargado %></td>
              <td><%= sucursal.CiudadNombre %></td>
              <td><%= sucursal.DepartamentoNombre %></td>
              <td><%= sucursal.PaisNombre %></td>
              <td style="width: 200px;">
                <select class="form-select-action acciones-select"
                  aria-label="Acciones">
                  <option selected disabled>Selecciona una acción</option>
                  <option value="editar">Editar</option>
                  <option value="eliminar">Eliminar</option>
                  <option value="copiar">Copiar</option>
                </select>
              </td>
            </tr>
            
          </tbody>
        </table>
      </div>
    </div>

    <script type="text/javascript"
      src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript"
      src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.0/xlsx.full.min.js"></script>

    <script>
    $(document).ready(function () {
      let url = "/sucursales/"; 
      let tablaSucursales = $("#tablaSucursales").DataTable({
        json: { url: url, dataSrc: "" },
        columns: [
          { data: "ID_Sucursal" },
          { data: "Nombre" },
          { data: "Direccion" },
          { data: "Telefono" },
          { data: "Encargado" },
          { data: "CiudadNombre" },
          { data: "DepartamentoNombre" },
          { data: "PaisNombre" },
          {
            defaultContent: `
              <td style="width: 200px;">
                <select class="form-select acciones-select">
                  <option selected disabled>Selecciona una acción</option>
                  <option value="editar">Editar</option>
                  <option value="eliminar">Eliminar</option>
                  <option value="copiar">Copiar</option>
                </select>
              </td>`
          },
        ],
        language: { url: "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json" }
      });
  
      // Opciones de exportación e impresión
      $("#opciones").change(function () {
        let selectedOption = $(this).val();
        if (selectedOption === "pdf") {
          window.open("/impre_sucursales", '_blank'); // Abre el PDF en una nueva ventana
        } else if (selectedOption === "excel") {
          exportToExcel(); // Llama a la función para exportar a CSV
        } else if (selectedOption === "papeleria") {
          window.location.href = "/sucursalesP"; // Redirige a la página de papelería
        }
      });
  
      // Función para exportar a Excel (CSV)
      function exportToExcel() {
        let wb = XLSX.utils.book_new();
        let wsData = [];
        $("#tablaSucursales tbody tr").each(function () {
          let rowData = [];
          $(this).find("td").each(function () {
            rowData.push($(this).text().trim());
          });
          wsData.push(rowData);
        });
        let ws = XLSX.utils.aoa_to_sheet([["ID_Sucursal", "Nombre", "Direccion", "Telefono", "Encargado", "CiudadNombre", "DepartamentoNombre", "PaisNombre"]].concat(wsData));
        XLSX.utils.book_append_sheet(wb, ws, "Sucursales");
        XLSX.writeFile(wb, "sucursales.xlsx");
      }
  
      $('.btnCrear').click(function () {
    Swal.fire({
        title: 'Crear Sucursal',
        html: `
            <div class="form-container">
                <label for="Nombre" class="col-form-label">Nombre</label>
                <input type="text" id="Nombre" class="form-input swal2-input" 
                       maxlength="50" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese el nombre">

                <label for="Direccion" class="col-form-label">Dirección</label>
                <input type="text" id="Direccion" class="form-input swal2-input" 
                       maxlength="100" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese la dirección">

                <label for="Telefono" class="col-form-label">Teléfono</label>
                <input type="tel" id="Telefono" class="form-input swal2-input" 
                       maxlength="15" pattern="[0-9]+" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese el teléfono">

                <label for="Encargado" class="col-form-label">Encargado</label>
                <input type="text" id="Encargado" class="form-input swal2-input" 
                       maxlength="50" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese el nombre del encargado">
                
                <!-- Select de País -->
                <label for="ID_Pais" class="col-form-label">País</label>
                <select id="ID_Pais" class="form-select-form swal2-input" required>
                    <option value="">Selecciona un país</option>
                    <% paises.forEach(pais => { %>
                        <option value="<%= pais.ID_Pais %>"><%= pais.Nombre %></option>
                    <% }); %>
                </select>

                <!-- Select de Departamento -->
                <label for="ID_Departamento" class="col-form-label">Departamento</label>
                <select id="ID_Departamento" class="form-select-form swal2-input" required>
                    <option value="">Selecciona un departamento</option>
                    <% departamentos.forEach(depto => { %>
                        <option value="<%= depto.ID_Departamento %>"><%= depto.Nombre %></option>
                    <% }); %>
                </select>

                <!-- Select de Ciudad -->
                <label for="ID_Ciudad" class="col-form-label">Ciudad</label>
                <select id="ID_Ciudad" class="form-select-form swal2-input" required>
                    <option value="">Selecciona una ciudad</option>
                    <% ciudades.forEach(ciudad => { %>
                        <option value="<%= ciudad.ID_Ciudad %>"><%= ciudad.Nombre %></option>
                    <% }); %>
                </select>
            </div>
        `,
        showCancelButton: true,
        confirmButtonText: 'Guardar',
        cancelButtonText: 'Cancelar',
        
        preConfirm: () => {
            // Validación de campos
            const nombre = $('#Nombre').val().trim();
            const direccion = $('#Direccion').val().trim();
            const telefono = $('#Telefono').val().trim();
            const encargado = $('#Encargado').val().trim();
            const pais = $('#ID_Pais').val();
            const departamento = $('#ID_Departamento').val();
            const ciudad = $('#ID_Ciudad').val();

            // Verificar campos vacíos o inválidos
            if (!nombre || !direccion || !telefono || !encargado || !pais || !departamento || !ciudad) {
                Swal.showValidationMessage(`Por favor, completa todos los campos.`);
                return false;
            }

            // Verificar que el teléfono solo contenga números
            if (!/^\d+$/.test(telefono)) {
                Swal.showValidationMessage(`El teléfono debe contener solo números.`);
                return false;
            }

            return {
                Nombre: nombre,
                Direccion: direccion,
                Telefono: telefono,
                Encargado: encargado,
                ID_Pais: pais,
                ID_Departamento: departamento,
                ID_Ciudad: ciudad
            };
        }
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                type: 'POST',
                url: url,
                data: { ...result.value, opcion: 'crear' },
                success: function () {
                    Swal.fire('¡Guardado!', 'Sucursal creada con éxito', 'success').then(() => {
                        window.location.reload(); // Recarga la página después de guardar
                    });
                }
            });
        }
    });
});

  
      $('#tablaSucursales tbody').on('change', '.acciones-select', function () {
    var data = tablaSucursales.row($(this).parents('tr')).data();
    var accion = $(this).val();

    if (accion === 'editar') {
        Swal.fire({
            title: 'Editar Sucursal',
            html: `
                <div class="form-container">
                    <input type="text" id="ID_Sucursal" hidden value="${data.ID_Sucursal}" />
                    
                    <label for="Nombre" class="col-form-label">Nombre</label>
                    <input type="text" id="Nombre" class="form-input swal2-input" value="${data.Nombre}" 
                           maxlength="50" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese el nombre">
                    
                    <label for="Direccion" class="col-form-label">Dirección</label>
                    <input type="text" id="Direccion" class="form-input swal2-input" value="${data.Direccion}" 
                           maxlength="100" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese la dirección">
                    
                    <label for="Telefono" class="col-form-label">Teléfono</label>
                    <input type="tel" id="Telefono" class="form-input swal2-input" value="${data.Telefono}" 
                           maxlength="15" pattern="[0-9]+" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese el teléfono">
                    
                    <label for="Encargado" class="col-form-label">Encargado</label>
                    <input type="text" id="Encargado" class="form-input swal2-input" value="${data.Encargado}" 
                           maxlength="50" required oninput="this.value = this.value.trimStart()" placeholder="Ingrese el nombre del encargado">
                    
                    <p>Aquí tienes tus datos:</p>
                    <p style="color: red;">Departamento: ${data.DepartamentoNombre}, Ciudad: ${data.CiudadNombre}, País: ${data.PaisNombre}</p>
                    
                    <label for="ID_Pais" class="col-form-label">País</label>
                    <select id="ID_Pais" class="form-select-form swal2-input" required>
                        <option value="">Selecciona un país</option>
                    </select>

                    <label for="ID_Departamento" class="col-form-label">Departamento</label>
                    <select id="ID_Departamento" class="form-select-form swal2-input" required>
                        <option value="">Selecciona un departamento</option>
                    </select>

                    <label for="ID_Ciudad" class="col-form-label">Ciudad</label>
                    <select id="ID_Ciudad" class="form-select-form swal2-input" required>
                        <option value="">Selecciona una ciudad</option>
                    </select>
                </div>
            `,
            showCancelButton: true,
            confirmButtonText: 'Guardar',
            cancelButtonText: 'Cancelar',
            customClass: {
                popup: 'swal-wide' // Clase personalizada para hacer más ancho el modal
            },

            didOpen: () => {
                const popup = Swal.getPopup();
                
                // Cargar y seleccionar automáticamente cada select
                cargarSelect('/api/paises', popup.querySelector('#ID_Pais'), "Selecciona un país", data.ID_Pais);
                cargarSelect('/api/departamentos', popup.querySelector('#ID_Departamento'), "Selecciona un departamento", data.ID_Departamento);
                cargarSelect('/api/ciudades', popup.querySelector('#ID_Ciudad'), "Selecciona una ciudad", data.ID_Ciudad);
            },

            preConfirm: () => {
                const popup = Swal.getPopup();

                // Validación de campos
                const nombre = popup.querySelector('#Nombre').value.trim();
                const direccion = popup.querySelector('#Direccion').value.trim();
                const telefono = popup.querySelector('#Telefono').value.trim();
                const encargado = popup.querySelector('#Encargado').value.trim();
                const pais = popup.querySelector('#ID_Pais').value;
                const departamento = popup.querySelector('#ID_Departamento').value;
                const ciudad = popup.querySelector('#ID_Ciudad').value;

                // Verificar campos vacíos o inválidos
                if (!nombre || !direccion || !telefono || !encargado || !pais || !departamento || !ciudad) {
                    Swal.showValidationMessage(`Por favor, completa todos los campos.`);
                    return false;
                }

                // Verificar que el teléfono solo contenga números
                if (!/^\d+$/.test(telefono)) {
                    Swal.showValidationMessage(`El teléfono debe contener solo números.`);
                    return false;
                }

                return {
                    ID_Sucursal: popup.querySelector('#ID_Sucursal').value,
                    Nombre: nombre,
                    Direccion: direccion,
                    Telefono: telefono,
                    Encargado: encargado,
                    ID_Pais: pais,
                    ID_Departamento: departamento,
                    ID_Ciudad: ciudad
                };
            }
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: url + data.ID_Sucursal,
                    data: { ...result.value, opcion: 'editar' },
                    success: function () {
                        Swal.fire('¡Guardado!', 'Sucursal editada con éxito', 'success').then(() => {
                            window.location.reload(); // Recarga la página después de guardar
                        });
                    }
                });
            }
        });
    } else if (accion === 'eliminar') {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "¡No podrás revertir esto!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Sí, eliminarlo',
            cancelButtonText: 'Cancelar',
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: `${url}${data.ID_Sucursal}`,
                    data: { opcion: 'eliminar' },
                    success: function () {
                        Swal.fire('¡Eliminado!', 'La sucursal ha sido eliminada.', 'success').then(() => {
                            window.location.reload(); // Recarga la página después de eliminar
                        });
                    }
                });
            }
        });
    } else if (accion === 'copiar') {
        var datosFila = [
            data.ID_Sucursal, data.Nombre, data.Direccion,
            data.Telefono, data.Encargado, data.CiudadNombre,
            data.DepartamentoNombre, data.PaisNombre
        ].join("\t");
        navigator.clipboard.writeText(datosFila).then(function () {
            alert("¡Datos copiados al portapapeles!");
        }).catch(function (error) {
            alert("Error al copiar datos al portapapeles");
        });
    }
});

    // Función para cargar opciones en un select y seleccionar un valor predeterminado
function cargarSelect(url, selectElement, defaultText, selectedId = null) {
    fetch(url)
        .then(response => response.json())
        .then(data => {
            selectElement.innerHTML = `<option value="">${defaultText}</option>`; // Opción por defecto

            data.forEach(item => {
                const option = document.createElement('option');
                option.value = item.id;
                option.textContent = item.nombre;
                selectElement.appendChild(option);
            });

            // Si se pasa un ID para seleccionar
            if (selectedId) {
                selectElement.value = selectedId;
            }
        })
        .catch(error => console.error(`Error al cargar los datos para el select ${selectElement.id}:`, error));
}
});
  </script>

  </body>
</html>
